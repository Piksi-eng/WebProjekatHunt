// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace WebHunt.Migrations
{
    [DbContext(typeof(HuntContext))]
    partial class HuntContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("Models.Guns", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("GunDmg")
                        .HasColumnType("int");

                    b.Property<string>("GunName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("GunPrice")
                        .HasColumnType("int");

                    b.Property<int>("GunRange")
                        .HasColumnType("int");

                    b.Property<int>("GunSpeed")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Gun");
                });

            modelBuilder.Entity("Models.GunsVariant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("GunID")
                        .HasColumnType("int");

                    b.Property<int>("VariantID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("GunID");

                    b.HasIndex("VariantID");

                    b.ToTable("GunsVariant");
                });

            modelBuilder.Entity("Models.Loadout", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("GunsVariantID")
                        .HasColumnType("int");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SecondGunID")
                        .HasColumnType("int");

                    b.Property<int?>("Tool1ID")
                        .HasColumnType("int");

                    b.Property<int?>("Tool2ID")
                        .HasColumnType("int");

                    b.Property<int?>("Tool3ID")
                        .HasColumnType("int");

                    b.Property<int?>("Tool4ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("GunsVariantID");

                    b.HasIndex("SecondGunID");

                    b.HasIndex("Tool1ID");

                    b.HasIndex("Tool2ID");

                    b.HasIndex("Tool3ID");

                    b.HasIndex("Tool4ID");

                    b.ToTable("Loadout");
                });

            modelBuilder.Entity("Models.SecondGun", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("SGunDmg")
                        .HasColumnType("int");

                    b.Property<string>("SGunName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SGunPrice")
                        .HasColumnType("int");

                    b.Property<int>("SGunRange")
                        .HasColumnType("int");

                    b.Property<int>("SGunSpeed")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("SecondGun");
                });

            modelBuilder.Entity("Models.Tools", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ToolDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToolName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ToolPrice")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Tools");
                });

            modelBuilder.Entity("Models.Variant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("DmgC")
                        .HasColumnType("int");

                    b.Property<int>("PriceC")
                        .HasColumnType("int");

                    b.Property<int>("RangeC")
                        .HasColumnType("int");

                    b.Property<int>("SpeedC")
                        .HasColumnType("int");

                    b.Property<string>("VariantName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Variant");
                });

            modelBuilder.Entity("Models.GunsVariant", b =>
                {
                    b.HasOne("Models.Guns", "Gun")
                        .WithMany("GunsVariant")
                        .HasForeignKey("GunID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Variant", "Variant")
                        .WithMany("VariantGuns")
                        .HasForeignKey("VariantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gun");

                    b.Navigation("Variant");
                });

            modelBuilder.Entity("Models.Loadout", b =>
                {
                    b.HasOne("Models.GunsVariant", "GunsVariant")
                        .WithMany()
                        .HasForeignKey("GunsVariantID");

                    b.HasOne("Models.SecondGun", "SecondGun")
                        .WithMany()
                        .HasForeignKey("SecondGunID");

                    b.HasOne("Models.Tools", "Tool1")
                        .WithMany()
                        .HasForeignKey("Tool1ID");

                    b.HasOne("Models.Tools", "Tool2")
                        .WithMany()
                        .HasForeignKey("Tool2ID");

                    b.HasOne("Models.Tools", "Tool3")
                        .WithMany()
                        .HasForeignKey("Tool3ID");

                    b.HasOne("Models.Tools", "Tool4")
                        .WithMany()
                        .HasForeignKey("Tool4ID");

                    b.Navigation("GunsVariant");

                    b.Navigation("SecondGun");

                    b.Navigation("Tool1");

                    b.Navigation("Tool2");

                    b.Navigation("Tool3");

                    b.Navigation("Tool4");
                });

            modelBuilder.Entity("Models.Guns", b =>
                {
                    b.Navigation("GunsVariant");
                });

            modelBuilder.Entity("Models.Variant", b =>
                {
                    b.Navigation("VariantGuns");
                });
#pragma warning restore 612, 618
        }
    }
}
